/* * Copyright (C) 2012 Karen P. Tang, Sen Hirano *  * This file is part of the Estrellita project. *  * This program is free software: you can redistribute it and/or  * modify it under the terms of the GNU Lesser General Public License  * as published by the Free Software Foundation, either version 3 of  * the License, or any later version. *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU  * General Public License for more details. *  * You should have received a copy of the GNU Lesser General Public  * License along with this program. If not, see * 				 * 				http://www.gnu.org/licenses/ *  *//** * @author Karen P. Tang * @author Sen Hirano *  */package edu.uci.ics.star.estrellita.sharedprefs;import android.content.Context;import android.preference.DialogPreference;import android.text.format.DateFormat;import android.util.AttributeSet;import android.view.View;import edu.uci.ics.star.estrellita.customview.HourPicker;import edu.uci.ics.star.estrellita.utils.DateUtils;/** * A preference type that allows a user to choose a time */public class HourPickerPreference extends DialogPreference  {	private int lastHour=0;	private HourPicker picker=null;	public HourPickerPreference(Context ctxt) {		this(ctxt, null);	}	public HourPickerPreference(Context ctxt, AttributeSet attrs) {		this(ctxt, attrs, 0);	}	public HourPickerPreference(Context ctxt, AttributeSet attrs, int defStyle) {		super(ctxt, attrs, defStyle);		setPositiveButtonText("Set");		setNegativeButtonText("Cancel");		initialize();	}	/*	 * (non-Javadoc)	 * @see android.preference.DialogPreference#onCreateDialogView()	 */	@Override	protected View onCreateDialogView() {		picker=new HourPicker(getContext());		picker.setCurrentMinute(0);		picker.setCurrentHour(getPersistedInt(0));		picker.setIs24HourView(DateFormat.is24HourFormat(getContext()));		return(picker);	}	private void initialize() {		setPersistent(true);	}	/*	 * (non-Javadoc)	 * @see android.preference.DialogPreference#onDialogClosed(boolean)	 */	@Override	protected void onDialogClosed(boolean positiveResult) {		super.onDialogClosed(positiveResult);		if (positiveResult) {			lastHour=picker.getCurrentHour();			if (callChangeListener(lastHour)) {				persistInt(lastHour);			}		}	}	/*	 * (non-Javadoc)	 * @see android.preference.Preference#onSetInitialValue(boolean, java.lang.Object)	 */	@Override	protected void onSetInitialValue(boolean restoreValue, Object defaultValue) {		Integer time = 0;		if (restoreValue) {			if (defaultValue==null) {				time = getPersistedInt(DateUtils.getTimestamp().getHours());			}			else {				time = getPersistedInt(Integer.parseInt(defaultValue.toString()));			}		}		else {			time = Integer.parseInt(defaultValue.toString());		}		lastHour = time;	}}